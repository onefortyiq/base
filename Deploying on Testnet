// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract BasicMath {
    uint256 constant MAX_INT = type(uint256).max;

    function safeAdd(uint256 _a, uint256 _b) external pure returns (uint256 sum, bool overflow) {
        unchecked {
            sum = _a + _b;
            overflow = sum < _a || sum < _b;
        }
    }

    function safeSubtract(uint256 _a, uint256 _b) external pure returns (uint256 difference, bool underflow) {
        unchecked {
            if (_b > _a) {
                difference = 0;
                underflow = true;
            } else {
                difference = _a - _b;
                underflow = false;
            }
        }
    }
}
